server.port=8765

# eureka
spring.cloud.discovery.enabled=true

# address of the eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# name of application service to register in eureka
spring.application.name=company-api-gateway

# routes
spring.cloud.gateway.routes[0].id=aboutUsService
spring.cloud.gateway.routes[0].uri=lb://ABOUT-US-APP
spring.cloud.gateway.routes[0].predicates[0]=Path=/aboutusapi/**

spring.cloud.gateway.routes[1].id=companyService
spring.cloud.gateway.routes[1].uri=lb://COMPANY-APP
spring.cloud.gateway.routes[1].predicates[0]=Path=/companyapi/**

spring.cloud.gateway.routes[2].id=contactUsService
spring.cloud.gateway.routes[2].uri=lb://CONTACT-US-APP
spring.cloud.gateway.routes[2].predicates[0]=Path=/contactusapi/**

spring.cloud.gateway.routes[3].id=couponService
spring.cloud.gateway.routes[3].uri=lb://COUPON-APP
spring.cloud.gateway.routes[3].predicates[0]=Path=/couponapi/**

spring.cloud.gateway.routes[4].id=customerService
spring.cloud.gateway.routes[4].uri=lb://CUSTOMER-APP
spring.cloud.gateway.routes[4].predicates[0]=Path=/customerapi/**

spring.cloud.gateway.routes[5].id=employeeService
spring.cloud.gateway.routes[5].uri=lb://EMPLOYEE-APP
spring.cloud.gateway.routes[5].predicates[0]=Path=/employeeapi/**

spring.cloud.gateway.routes[6].id=faqService
spring.cloud.gateway.routes[6].uri=lb://FAQ-APP
spring.cloud.gateway.routes[6].predicates[0]=Path=/faqapi/**

spring.cloud.gateway.routes[7].id=guestEmailService
spring.cloud.gateway.routes[7].uri=lb://GUEST-EMAIL-APP
spring.cloud.gateway.routes[7].predicates[0]=Path=/guestemailapi/**

spring.cloud.gateway.routes[8].id=privacyPolicyService
spring.cloud.gateway.routes[8].uri=lb://PRIVACY-POLICY-APP
spring.cloud.gateway.routes[8].predicates[0]=Path=/privacypolicyapi/**

spring.cloud.gateway.routes[9].id=productItemService
spring.cloud.gateway.routes[9].uri=lb://PRODUCT-ITEM-APP
spring.cloud.gateway.routes[9].predicates[0]=Path=/productitemapi/**

spring.cloud.gateway.routes[10].id=shippingAndReturnsService
spring.cloud.gateway.routes[10].uri=lb://SHIPPING-AND-RETURNS-APP
spring.cloud.gateway.routes[10].predicates[0]=Path=/shippingandreturnsapi/**

spring.cloud.gateway.routes[11].id=termsOfUseService
spring.cloud.gateway.routes[11].uri=lb://TERMS-OF-USE-APP
spring.cloud.gateway.routes[11].predicates[0]=Path=/termsofuseapi/**

spring.cloud.gateway.routes[12].id=newsAndUpdates
spring.cloud.gateway.routes[12].uri=lb://NEWS-AND-UPDATES-APP
spring.cloud.gateway.routes[12].predicates[0]=Path=/newsandupdatesapi/**

# logging
logging.file.name =log/company-api-gateway.log

# ACTUATOR
# use separate port for actuator endpoints
management.server.port=9765

# expose no endpoints (use spring security config)
# management.endpoints.web.exposure.exclude=*

# expose all endpoints (use spring security config)
management.endpoints.web.exposure.include=*

# enable /info endpoint
management.info.env.enabled=true

# show the full details of all health indicators (default is 'never')
management.endpoint.health.show-details=when-authorized

# additional details for app /info endpoint
# you may provide any name as long as it starts with info
info.app.name=${spring.application.name}
info.app.description=${spring.application.name} microservice for company website