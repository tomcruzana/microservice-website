DROP TABLE CUSTOMER_EMAIL;
DROP TABLE CUSTOMER;

CREATE DATABASE M_ECOMM_DB_DEV;
USE M_ECOMM_DB_DEV;

CREATE TABLE CUSTOMER (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    PHONE_NUMBER VARCHAR(32) UNIQUE,
    DATE_CREATED DATE DEFAULT (CURRENT_DATE()),
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL
);

CREATE TABLE CUSTOMER_EMAIL (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    DATE_CREATED DATE DEFAULT (CURRENT_DATE())
);

INSERT INTO CUSTOMER_EMAIL (EMAIL) VALUES ("harold.amiel11@email.com");
INSERT INTO CUSTOMER_EMAIL (EMAIL) VALUES ("roy.cruz09@email.com");

SELECT COUNT(*) FROM CUSTOMER_EMAIL;
SELECT * FROM CUSTOMER_EMAIL;

### CHECK IF CX HAS AN EXISTING EMAIL SUBSCRIPTION
### IF EMAIL IS SUBSCRIBED PRIOR TO ACCOUNT CREATION SIMPLY ROUTE TO ACCOUNT CREATION & PREPOPULATE EMAIL FIELD
SELECT CUSTOMER.USERNAME, CUSTOMER.EMAIL, CUSTOMER_EMAIL.EMAIL FROM CUSTOMER INNER JOIN CUSTOMER_EMAIL ON CUSTOMER.EMAIL = CUSTOMER_EMAIL.EMAIL WHERE CUSTOMER.EMAIL = "harold.amiel11@email.com";

### REGISTER CX WITH/WITH OUT AN EXISTING EMAIL SUBSCRIPTION
INSERT INTO CUSTOMER (FIRST_NAME, LAST_NAME, PHONE_NUMBER, USERNAME, PASSWORD, EMAIL) VALUES (
	"Thomas",
    "Milles",
    "3609322455",
    "tmilles02",
    "password123",
    "tom.bam02@email.com"
);

INSERT INTO CUSTOMER (FIRST_NAME, LAST_NAME, PHONE_NUMBER, USERNAME, PASSWORD, EMAIL) VALUES (
	"Mark",
    "Diz",
    "3609322465",
    "diz1101",
    "password123",
    "harold.amiel11@email.com"
);

INSERT INTO CUSTOMER (FIRST_NAME, LAST_NAME, PHONE_NUMBER, USERNAME, PASSWORD, EMAIL) VALUES (
	"Janice",
    "Milles",
    "3609323455",
    "janice90",
    "password123",
    "janice.cruze23@email.com"
);

INSERT INTO CUSTOMER (FIRST_NAME, LAST_NAME, PHONE_NUMBER, USERNAME, PASSWORD, EMAIL) VALUES (
	"Rolce",
    "Royze",
    "3609313455",
    "Rolce88",
    "password123",
    "Royze.Royze345@email.com"
);

SELECT * FROM CUSTOMER;
commit;